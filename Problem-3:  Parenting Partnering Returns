#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define ll          long long
#define double      long double
#define endl        '\n'
#define sz(x)       (int)(x).size()


#define pb          push_back
#define pf          push_front
#define lb(v,n)     lower_bound(all((v)),(n))
#define ub(v,n)     upper_bound(all((v)),(n))
        
#define vi          vector<int>
#define vii         vector<pii>
#define viiii       vector<pair<pii,pii>>
        
#define mi          map<int,int>
#define mii         map<pii,int>
        
#define pii         pair<int,int>
#define piii        pair<int,pair<int,int> >
#define piiii       pair<pii,pii>
#define fi          first
#define se          second
#define mp          make_pair
#define all(a)      (a).begin(),(a).end()
#define rall(a)     (a).rbegin(),(a).rend()
        
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define reps(X,S,Y) for (int (X) = S;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y)-1;(X) >=0;--(X))
#define rreps(X,S,Y) for (int (X) = (Y)-1;(X) >= (S);--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define toit ios::sync_with_stdio(0);cin.tie(0);
        
        
        
int gcd(int a, int b) {  if (b == 0)  return a; return gcd(b , a % b); }
bool mod(double a,double b) {return a/b - floor(a/b);}
        
int occurs(vi v,int n){
auto it=lb(v,n);auto it1=ub(v,n);int x=it1-it;return x;}
        
double max(double a,double b){
    return a<b ? b:a;
}



int main()
{toit
    int t;
    cin>>t;
    int tc=0;
    while(t--){
        tc++;
        int n;
        cin>>n;
        map<pii,int>mp;
        vector<pii>v;
        rep(i,n){
            int x,y;
            cin>>x>>y;
            mp.insert({pii(x,y),i});
            v.pb(pii(x,y));
        }
        sort(all(v));
        string ans="";
        rep(i,n) ans+="C";
        
        ans[mp[{v[0].first,v[0].second}]]='C';
        
        int etimec=v[0].second,etimej,flag=0,im=0;
        for(int i=1;i<n;i++)
        {
            if(v[i].first>=etimec)
            {
                ans[mp[{v[i].first,v[i].second}]]='C';
                etimec=v[i].second;
            }
            else if(v[i].first<etimec && flag==0)
            {
                flag=1;
                etimej=v[i].second;
                ans[mp[{v[i].first,v[i].second}]]='J';
            }
            else if(v[i].first<etimec && v[i].first>=etimej)
            {
                etimej=v[i].second;
                ans[mp[{v[i].first,v[i].second}]]='J';
            }
            else if(v[i].first<etimec && v[i].first<etimej)
            {
                im=1;
                break;
            }
        }
        if(im==1) cout<<"Case #"<<tc<<": "<<"IMPOSSIBLE"<<endl;
        else
        cout<<"Case #"<<tc<<": "<<ans<<endl;
        
        
        
    }
    return 0;
}






